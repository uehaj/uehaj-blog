{"version":3,"sources":["webpack:///./src/components/post-link.js","webpack:///./src/components/heroHeader.js","webpack:///./src/pages/index.js"],"names":["PostLink","post","class","to","frontmatter","path","thumbnail","src","alt","title","className","date","query","render","data","site","siteMetadata","home","description","pageQuery","IndexPage","Posts","allMarkdownRemark","edges","filter","edge","node","map","key","id","name","content","w3l_dom_key"],"mappings":"kNAuBeA,EApBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASC,MAAM,SACb,kBAAC,IAAD,CAAMC,GAAI,cAAgBF,EAAKG,YAAYC,QACtCJ,EAAKG,YAAYE,WAClB,yBACEC,IAAKN,EAAKG,YAAYE,UACtBE,IAAKP,EAAKG,YAAYK,MAAQ,qBAIpC,gCACE,wBAAIC,UAAU,cACZ,kBAAC,IAAD,CAAMP,GAAI,cAAgBF,EAAKG,YAAYC,KAAMK,UAAU,aACxDT,EAAKG,YAAYK,QAGtB,yBAAKP,MAAM,aAAaD,EAAKG,YAAYO,S,YCjBhC,oBACb,kBAAC,IAAD,CACEC,MAAK,aAYLC,OAAQ,SAAAC,GAAI,OACV,yBAAKJ,UAAU,eACb,yBAAKA,UAAU,YAAYI,EAAKC,KAAKC,aAAaC,KAAKR,OACvD,yBAAKC,UAAU,mBACb,2BAAII,EAAKC,KAAKC,aAAaC,KAAKC,cAElC,kBAAC,IAAD,CAAMf,GAAG,WAAWO,UAAU,mBAA9B,oBAnBN,UCgCWS,GADEC,UA3BG,SAAC,GAKZ,IAAD,IAJJN,KACEC,EAGE,EAHFA,KAKIM,EAFF,EAFFC,kBAAqBC,MAKpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKtB,YAAYO,QACvCgB,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAI5B,KAAMwB,EAAKC,UAEvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQX,EAAKC,aAAaP,OAC1B,0BAAMqB,KAAK,cAAcC,QAAShB,EAAKC,aAAaE,cAClDH,EAAKC,aAAagB,YAAqB,0BAAMF,KAAK,0BAA0BC,QAAShB,EAAKC,aAAagB,cAAvE,MAEpC,kBAAC,EAAD,MACA,4CACA,yBAAKtB,UAAU,SACZW,KAOa,e","file":"component---src-pages-index-js-c5c876f2e01a13ce6681.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst PostLink = ({ post }) => (\n  <article class=\"card \">\n    <Link to={'/uehaj-blog' + post.frontmatter.path}>\n      {!!post.frontmatter.thumbnail && (\n        <img\n          src={post.frontmatter.thumbnail}\n          alt={post.frontmatter.title + '- Featured Shot'}\n        />\n      )}\n    </Link>\n    <header>\n      <h2 className=\"post-title\">\n        <Link to={'/uehaj-blog' + post.frontmatter.path} className=\"post-link\">\n          {post.frontmatter.title}\n        </Link>\n      </h2>\n      <div class=\"post-meta\">{post.frontmatter.date}</div>\n    </header>\n  </article>\n);\nexport default PostLink;\n","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        site {\n          siteMetadata {\n            home {\n              title\n              description\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"hero-header\">\n        <div className=\"headline\">{data.site.siteMetadata.home.title}</div>\n        <div className=\"primary-content\">\n          <p>{data.site.siteMetadata.home.description}</p>\n        </div>\n        <Link to='/contact' className=\"button -primary\">Get in touch &rarr;</Link>\n      </div>\n    )}\n  />\n)","import React from \"react\"\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby'\nimport Layout from \"../components/layout\"\nimport PostLink from \"../components/post-link\"\nimport HeroHeader from \"../components/heroHeader\"\n\nconst IndexPage = ({\n  data: {\n    site,\n    allMarkdownRemark: { edges },\n  },\n}) => {\n\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{site.siteMetadata.title}</title>\n        <meta name=\"description\" content={site.siteMetadata.description} />\n        {!site.siteMetadata.w3l_dom_key ? null : <meta name=\"w3l-domain-verification\" content={site.siteMetadata.w3l_dom_key} />}\n      </Helmet>\n      <HeroHeader/>\n      <h2>Blog Posts &darr;</h2>\n      <div className=\"grids\">\n        {Posts}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\nexport const pageQuery = graphql`\n  query indexPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        w3l_dom_key\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n#            thumbnail\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}